# Generated by Django 5.1.3 on 2025-03-07 23:10

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("home", "0019_alter_enhancedstandardpage_body"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="photodedication",
            name="card",
        ),
        migrations.AddField(
            model_name="enhancedstandardpage",
            name="description",
            field=wagtail.fields.RichTextField(
                blank=True, help_text="Description of the section"
            ),
        ),
        migrations.AddField(
            model_name="enhancedstandardpage",
            name="title_text",
            field=models.CharField(
                blank=True, help_text="Title of the section", max_length=255
            ),
        ),
        migrations.AddField(
            model_name="enhancedstandardpage",
            name="video_url",
            field=models.URLField(blank=True, help_text="YouTube embed URL"),
        ),
        migrations.AddField(
            model_name="photodedication",
            name="alt_text",
            field=models.CharField(
                blank=True,
                help_text="Enter alternative text for the image",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="photodedication",
            name="dawson_page",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="photo_dedication",
                to="home.dawsonpage",
            ),
        ),
        migrations.AddField(
            model_name="photodedication",
            name="enhanced_standard_page",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="photo_dedications",
                to="home.enhancedstandardpage",
            ),
        ),
        migrations.AlterField(
            model_name="enhancedstandardpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    ("heading", 3),
                    ("h2", 4),
                    ("h3", 5),
                    ("h4", 6),
                    ("paragraph", 7),
                    ("hr", 8),
                    ("image", 9),
                    ("photo_dedication", 14),
                    ("links", 22),
                    ("questionanswers", 24),
                    ("columns", 29),
                    ("embedded_video", 32),
                ],
                block_lookup={
                    0: ("wagtail.blocks.CharBlock", (), {}),
                    1: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("h2", "Heading 2"),
                                ("h3", "Heading 3"),
                                ("h4", "Heading 4"),
                                ("h5", "Heading 5"),
                            ]
                        },
                    ),
                    2: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Optional ID for linking to this heading",
                            "required": False,
                        },
                    ),
                    3: (
                        "wagtail.blocks.StructBlock",
                        [[("text", 0), ("level", 1), ("id", 2)]],
                        {},
                    ),
                    4: ("wagtail.blocks.CharBlock", (), {"label": "Heading 2"}),
                    5: ("wagtail.blocks.CharBlock", (), {"label": "Heading 3"}),
                    6: ("wagtail.blocks.CharBlock", (), {"label": "Heading 4"}),
                    7: ("wagtail.blocks.RichTextBlock", (), {}),
                    8: (
                        "wagtail.blocks.BooleanBlock",
                        (),
                        {
                            "default": True,
                            "help_text": "Add 'Horizontal Rule'.",
                            "label": "Horizontal Rule",
                        },
                    ),
                    9: ("wagtail.images.blocks.ImageBlock", [], {}),
                    10: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"max_length": 255, "required": True},
                    ),
                    11: (
                        "wagtail.images.blocks.ImageBlock",
                        [],
                        {
                            "help_text": "Upload an image to display with this dedication"
                        },
                    ),
                    12: (
                        "wagtail.blocks.RichTextBlock",
                        (),
                        {
                            "help_text": "Add the main paragraph text for the dedication section",
                            "required": False,
                        },
                    ),
                    13: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Provide alternative text for the image for accessibility.",
                            "max_length": 255,
                            "required": False,
                        },
                    ),
                    14: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("title", 10),
                                ("photo", 11),
                                ("paragraph_text", 12),
                                ("alt_text", 13),
                            ]
                        ],
                        {},
                    ),
                    15: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("indented", "indented"),
                                ("unindented", "unindented"),
                            ]
                        },
                    ),
                    16: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("ti ti-book-2", "Book 2"),
                                ("ti ti-building-bank", "Building Bank"),
                                ("ti ti-calendar-month", "Calendar Month"),
                                ("ti ti-chevron-right", "Chevron Right"),
                                ("ti ti-file", "File"),
                                ("ti ti-hammer", "Hammer"),
                                ("ti ti-info-circle", "Info"),
                                ("ti ti-info-circle-filled", "Info Circle Filled"),
                                ("ti ti-link", "Link"),
                                ("", "None"),
                                ("ti ti-file-type-pdf", "Pdf"),
                                ("ti ti-scale", "Scale"),
                                ("ti ti-user-filled", "User"),
                                ("ti ti-video-filled", "Video"),
                                ("ti ti-settings-filled", "Settings"),
                                ("ti ti-briefcase-filled", "Briefcase"),
                                ("ti ti-search", "Search"),
                            ],
                            "required": False,
                        },
                    ),
                    17: (
                        "wagtail.documents.blocks.DocumentChooserBlock",
                        (),
                        {"required": False},
                    ),
                    18: ("wagtail.blocks.CharBlock", (), {"required": False}),
                    19: ("wagtail.blocks.BooleanBlock", (), {"required": False}),
                    20: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("title", 0),
                                ("icon", 16),
                                ("document", 17),
                                ("url", 18),
                                ("text_only", 19),
                            ]
                        ],
                        {},
                    ),
                    21: ("wagtail.blocks.ListBlock", (20,), {}),
                    22: (
                        "wagtail.blocks.StructBlock",
                        [[("class", 15), ("links", 21)]],
                        {},
                    ),
                    23: (
                        "wagtail.blocks.StructBlock",
                        [[("question", 18), ("answer", 7), ("anchortag", 0)]],
                        {},
                    ),
                    24: ("wagtail.blocks.ListBlock", (23,), {}),
                    25: (
                        "wagtail.blocks.StructBlock",
                        [[("text", 0), ("anchortag", 18)]],
                        {},
                    ),
                    26: (
                        "wagtail.blocks.StructBlock",
                        [[("text", 0), ("url", 18)]],
                        {},
                    ),
                    27: (
                        "wagtail.blocks.StreamBlock",
                        [[("h2WithAnchorTag", 25), ("clickableButton", 26)]],
                        {},
                    ),
                    28: ("wagtail.blocks.ListBlock", (27,), {}),
                    29: ("wagtail.blocks.StructBlock", [[("column", 28)]], {}),
                    30: ("wagtail.blocks.RichTextBlock", (), {"required": False}),
                    31: ("wagtail.blocks.URLBlock", (), {"required": False}),
                    32: (
                        "wagtail.blocks.StructBlock",
                        [[("title", 18), ("description", 30), ("video_url", 31)]],
                        {},
                    ),
                },
            ),
        ),
    ]
