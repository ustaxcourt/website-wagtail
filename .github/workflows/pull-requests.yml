name: Run all pull requests checks

on:
    push:
        branches:
          - main
    pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: ./.github/actions/setup-python

    - name: Cache pip packages
      id: pip-cache
      uses: actions/cache@v3
      with:
        path: website/.venv
        key: ${{ runner.os }}-pip-${{ hashFiles('**/base.txt', '**/local.txt', '**/requirements.txt') }}

    - name: Install Python dependencies
      if: steps.pip-cache.outputs.cache-hit != 'true'
      run: |
        cd website
        make pip-install

    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v3
      with:
        path: website/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install Node dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: |
        cd website
        make npm-install

    - name: Compile USWDS
      run: |
        cd website
        make compile-uswds

    - name: Run pre-commit hooks
      run: |
        cd website
        make precommit

    - name: Run Unit Tests
      run: |
        cd website
        make pytest

    - name: Run Cypress Tests
      run: |
        cd website
        make migrate
        make createpages
        make run &
        echo "Waiting for application to be ready on port 8000..."
        for i in {1..30}; do
          if curl -s http://127.0.0.1:8000 > /dev/null; then
            echo "Application is ready!"
            sleep 2
            break
          fi
          echo "Waiting for port 8000... ($i/30)"
          sleep 2
        done
        if ! curl -s http://127.0.0.1:8000 > /dev/null; then
          echo "Application failed to start on port 8000 within the expected time." >&2
          exit 1
        fi
        make test-e2e
